files:
    "/tmp/nginx/cache/.keep":
        mode: "000644"
        over: root
        group: root
        content: |
            # keep
    "/etc/nginx/conf.d/webapp_healthd.conf":
        mode: "000644"
        owner: root
        group: root
        content: |
            # custom nginx config to fix public and https redirect
            upstream my_app {
              server unix:///var/run/puma/my_app.sock;
            }

            log_format healthd '$msec"$uri"'
                            '$status"$request_time"$upstream_response_time"'
                            '$http_x_forwarded_for';

            proxy_cache_path /tmp/nginx/cache levels=1:2 keys_zone=my_cache:10m max_size=10g inactive=60m use_temp_path=off;

            server {
              listen 80;
              server_name *.mysite.com mysite.com localhost; # need to listen to localhost for worker tier

              if ($time_iso8601 ~ "^(\d{4})-(\d{2})-(\d{2})T(\d{2})") {
                set $year $1;
                set $month $2;
                set $day $3;
                set $hour $4;
              }

              access_log  /var/log/nginx/access.log  main;
              access_log /var/log/nginx/healthd/application.log.$year-$month-$day-$hour healthd;

              root /var/app/current/public;

              location ~* \.(eot|svg|ttf|woff|woff2)$ {
                gzip_static on;
                gzip on;
                expires max;
                access_log off;
                add_header Cache-Control public;
                add_header Access-Control-Allow-Origin *;
              }

              location /healthcheck {
                add_header Access-Control-Allow-Origin https://my-external-service;
                proxy_set_header X-Real-IP $remote_addr;
                proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
                proxy_set_header Host $http_host;
                proxy_redirect off;
                proxy_next_upstream error;
                proxy_pass http://my_app;
                break;
              }

              location /cron {
                proxy_set_header X-Real-IP $remote_addr;
                proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
                proxy_set_header Host $http_host;
                proxy_redirect off;
                proxy_next_upstream error;
                proxy_pass http://my_app;
                break;
              }

              location /assets {
                alias /var/app/current/public/assets;
                gzip_static on;
                gzip on;
                expires max;
                access_log off;
                add_header Cache-Control public;
              }

              # cached endpoint example
              location ~ /my-cached-endpoint {
                proxy_set_header X-Real-IP $remote_addr;
                proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
                proxy_set_header Host $http_host;
                proxy_redirect off;
                proxy_next_upstream error;
                add_header Strict-Transport-Security "max-age=31536000; includeSubDomains;";

                add_header X-Cache-Status $upstream_cache_status;
                proxy_cache my_cache;

                proxy_pass http://my_app;
              }

              location / {
                if ($http_x_forwarded_proto != "https") {
                  rewrite ^(.*)$ https://$host$request_uri permanent;
                }
                try_files $uri @rails;
              }

              location @rails {
                proxy_set_header X-Real-IP $remote_addr;
                proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
                proxy_set_header Host $http_host;
                proxy_redirect off;
                proxy_next_upstream error;
                add_header Strict-Transport-Security "max-age=31536000; includeSubDomains;";

                proxy_pass http://my_app;
              }
            }
